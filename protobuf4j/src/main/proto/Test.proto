// 显示声明使用proto3语法, 否则使用默认的proto2，类似于制定JDK版本
syntax = "proto3";

// 生成类的包名
option java_package = "com.nb.proto.dto";
// 生成类的文件名，否则默认生成的类名为proto文件名的驼峰命名
option java_outer_classname = "TestProto";
// 定义的所有消息、枚举和服务生成对应的多个类文件，而不是以内部类的形式出现
option java_multiple_files = false;

// TestService
service TestService {
  // test方法，格式为"方法名 请求参数 返回参数"
  rpc test (Request) returns (Reply) {}
  // test2
  rpc test2 (Request) returns (Reply) {}
}

// 方法请求,包含用户名
message Request {
  string name = 1;
}

// 方法响应,包含响应的消息
message Reply {
  string message = 1;
}